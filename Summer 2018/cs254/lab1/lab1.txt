Script started on Tue May 15 14:23:01 2018
[?1034hbash-3.2$ cat lab1.c
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <math.h>

#define UPPER 100
#define LOWER 1


int main ()
{
    // Step 1
    // initial variables
    int m;
    int n;
    int u;
    int v;
    int counter;

    // primes
    int up;
    int vp;
    int mp;
    int np;

    // setting up random number generator
    time_t t;
    srand(time(&t));

    // formatting
    printf("\n+--------------------------------------------+----+----+-----+\n");
    printf("%-44s %-3s %-3s\n", "| um + vn", "| n`", "| ct | log |");
    printf("|--------------------------------------------+----+----+-----|\n");


    for (int i = 0 ; i < 50 ; i++)          // loops fifty times to produce fifty results
    {
        
        // settinng m with a random number
        m = (rand() % (UPPER - LOWER) + LOWER);
        mp = m;
        
        // settinng n with a random number
        n = (rand() % (UPPER - LOWER) + LOWER);
        np = n;

        // set u and u`
        u = 0;
        up = 1;

        // set v and v`
        v = 1;
        vp = 0;
        
        counter = 0;
        
        // Step 2
        while (mp % np != 0) // continues looping until no remainder
        {

            // Step 3
            // save u, v in temp variables
            int temp1 = u;
            int temp2 = v;

            u = up - (mp / np) * u;
            v = vp - (mp / np) * v;

            up = temp1;
            vp = temp2;

            // Step 4
            int r = mp % np;
            mp = np;
            np = r;

            counter++; // to track the number of divisions
        }

        // Step 5
        
        // prints the math statement to buff so that I can format the math as a single string
        char *buff;
        size_t sz;
        sz = snprintf(NULL, 0, "(%d)(%d) + (%d)(%d) = %d + %d =", u, m, v, n, u*m, v*n); // returns the size of the string 
        buff = (char *)malloc(sz+1); // allocates memory for buff
        snprintf(buff, sz + 1, "(%d)(%d) + (%d)(%d) = %d + %d =", u, m, v, n, u*m, v*n); // produces the math expression


        int logNum = (int) (2 * ceil(log( (m > n) ? n : m  ) ) + 1); // gets the log expression. 
                                                                     // uses conditional operator to determine largest num
        printf("| %38s %3d |%3d |%3d |%3d  |\n", buff, (u*m+v*n), np, counter, logNum ); // final output
    }

    printf("+--------------------------------------------+----+----+-----+\n\n");

    return 0;
}bash-3.2$ cc lab1.c
bash-3.2$ ./a.out

+--------------------------------------------+----+----+-----+
| um + vn                                    | n` | ct | log |
|--------------------------------------------+----+----+-----|
|      (3)(54) + (-4)(40) = 162 + -160 =   2 |  2 |  3 |  9  |
|              (1)(2) + (0)(6) = 2 + 0 =   2 |  2 |  1 |  3  |
|      (2)(98) + (-5)(39) = 196 + -195 =   1 |  1 |  3 |  9  |
|  (11)(96) + (-17)(62) = 1056 + -1054 =   2 |  2 |  5 | 11  |
|     (-7)(91) + (29)(22) = -637 + 638 =   1 |  1 |  2 |  9  |
|      (9)(39) + (-7)(50) = 351 + -350 =   1 |  1 |  5 |  9  |
|      (7)(79) + (-8)(69) = 553 + -552 =   1 |  1 |  3 | 11  |
|        (1)(43) + (-14)(3) = 43 + -42 =   1 |  1 |  1 |  5  |
|  (-13)(83) + (36)(30) = -1079 + 1080 =   1 |  1 |  4 |  9  |
|           (1)(12) + (0)(84) = 12 + 0 =  12 | 12 |  1 |  7  |
|      (9)(21) + (-2)(94) = 189 + -188 =   1 |  1 |  3 |  9  |
|  (19)(79) + (-25)(60) = 1501 + -1500 =   1 |  1 |  3 | 11  |
|      (-4)(29) + (3)(39) = -116 + 117 =   1 |  1 |  4 |  9  |
|     (-11)(19) + (7)(30) = -209 + 210 =   1 |  1 |  6 |  7  |
|  (23)(92) + (-45)(47) = 2116 + -2115 =   1 |  1 |  3 |  9  |
|  (33)(57) + (-20)(94) = 1881 + -1880 =   1 |  1 |  7 | 11  |
|        (4)(13) + (-3)(17) = 52 + -51 =   1 |  1 |  3 |  7  |
|        (2)(42) + (-1)(70) = 84 + -70 =  14 | 14 |  3 |  9  |
|  (-46)(64) + (31)(95) = -2944 + 2945 =   1 |  1 |  4 | 11  |
|      (-5)(68) + (9)(38) = -340 + 342 =   2 |  2 |  4 |  9  |
|        (-1)(24) + (1)(26) = -24 + 26 =   2 |  2 |  2 |  9  |
|        (1)(74) + (-3)(24) = 74 + -72 =   2 |  2 |  1 |  9  |
|        (-2)(22) + (1)(46) = -44 + 46 =   2 |  2 |  2 |  9  |
|        (2)(41) + (-3)(27) = 82 + -81 =   1 |  1 |  3 |  9  |
|       (2)(50) + (-11)(9) = 100 + -99 =   1 |  1 |  3 |  7  |
|     (17)(26) + (-9)(49) = 442 + -441 =   1 |  1 |  5 |  9  |
|     (-5)(62) + (12)(26) = -310 + 312 =   2 |  2 |  4 |  9  |
|        (1)(80) + (-13)(6) = 80 + -78 =   2 |  2 |  1 |  5  |
|         (7)(7) + (-2)(24) = 49 + -48 =   1 |  1 |  3 |  5  |
|     (23)(18) + (-7)(59) = 414 + -413 =   1 |  1 |  5 |  7  |
|        (1)(91) + (-5)(18) = 91 + -90 =   1 |  1 |  1 |  7  |
|  (-34)(34) + (13)(89) = -1156 + 1157 =   1 |  1 |  8 |  9  |
|        (6)(15) + (-1)(89) = 90 + -89 =   1 |  1 |  3 |  7  |
|     (2)(85) + (-13)(13) = 170 + -169 =   1 |  1 |  3 |  7  |
|        (-2)(10) + (1)(22) = -20 + 22 =   2 |  2 |  2 |  7  |
|        (2)(42) + (-1)(78) = 84 + -78 =   6 |  6 |  3 |  9  |
|      (2)(54) + (-7)(15) = 108 + -105 =   3 |  3 |  3 |  7  |
|           (0)(66) + (1)(33) = 0 + 33 =  33 | 33 |  0 |  9  |
|      (2)(96) + (-3)(60) = 192 + -180 =  12 | 12 |  3 | 11  |
|  (-15)(94) + (17)(83) = -1410 + 1411 =   1 |  1 |  4 | 11  |
|  (15)(93) + (-34)(41) = 1395 + -1394 =   1 |  1 |  5 |  9  |
|        (12)(8) + (-1)(94) = 96 + -94 =   2 |  2 |  3 |  7  |
|     (-29)(19) + (8)(69) = -551 + 552 =   1 |  1 |  6 |  7  |
|        (1)(75) + (-1)(50) = 75 + -50 =  25 | 25 |  1 |  9  |
|  (26)(80) + (-33)(63) = 2080 + -2079 =   1 |  1 |  5 | 11  |
|        (-1)(60) + (1)(66) = -60 + 66 =   6 |  6 |  2 | 11  |
|      (4)(76) + (-5)(60) = 304 + -300 =   4 |  4 |  3 | 11  |
|     (-2)(82) + (11)(15) = -164 + 165 =   1 |  1 |  2 |  7  |
|         (9)(5) + (-1)(44) = 45 + -44 =   1 |  1 |  3 |  5  |
|      (8)(32) + (-3)(85) = 256 + -255 =   1 |  1 |  5 |  9  |
+--------------------------------------------+----+----+-----+

bash-3.2$ ls -l
total 40
-rwxr-xr-x  1 benjamin  staff  8712 15 May 14:23 a.out
-rw-r--r--  1 benjamin  staff  2506 15 May 14:22 lab1.c
-rw-r--r--  1 benjamin  staff    43 15 May 14:23 lab1.txt
bash-3.2$ exit
exit

Script done on Tue May 15 14:23:25 2018
