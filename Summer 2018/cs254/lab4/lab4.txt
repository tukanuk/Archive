Script started on Tue 05 Jun 2018 02:14:24 PM EDT
]0;david11n@ltsp-amd64-bravo: ~/github/Scratch_Files/cs254/lab4[01;32mdavid11n@ltsp-amd64-bravo[00m:[01;34m~/github/Scratch_Files/cs254/lab4[00m$ cat lab4.c
/* Name: lab4.c
   Purpose: Lab 4
   Author: Ben Davidson
           104924033
   CS254 Lab Section
   Date: 0605-2018 12:05
*/

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include "../sharedFunctions.h" // small library of personal shared functions

#define maxN 100

/* Prototypes */
unsigned long int partOne(int fibN);
unsigned long int partTwo(int fibN);
unsigned long int partThree(int fibN);

/* Global Variables */

int knownF[maxN] = {0};

int main (int argc, char *argv[]) 
{
    system("clear");
    header("Lab 4", "0605-2018 1:35");  // some header info
    printf("INPUT: %s\n", argv[1]);     // echo the input string
    // printf("Fibonacci #s: 0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, ...\n"); // first several numbers for testing
    char * end;
    if (argv[1] == NULL)                // if the is no command line argument
    {
        printf("Include the n value for the Fibonaci number as a command line argument.\n");
    }
    else
    {
        int fibN = strtol(argv[1], &end, 10);   // parse the string to an integer
        if (fibN > 0)                           // if the value can be parsed, errors return 0
        {
            time_t start = clock();             // start the timer of  the function
            unsigned long int fib = partOne(fibN); 
            time_t end = clock();               // end the timer
            printf("Part 1: %lu in %ld seconds\n", partOne(fibN), (end - start)/CLOCKS_PER_SEC ); // display the results 
            
            start = clock();
            fib = partTwo(fibN);
            end = clock();
            printf("Part 2: %lu in %ld seconds\n", partTwo(fibN), (end - start)/CLOCKS_PER_SEC );
            
            start = clock();
            fib = partThree(fibN);
            end = clock();
            printf("Part 3: %lu in %ld seconds\n\n", partThree(fibN), (end - start)/CLOCKS_PER_SEC );
        }
        else        // if the command line argument cannot be parsed to an int
        {
            printf("Include the n value for the Fibonaci number as a command line argument.\n");
        }
    }
    return 1;
}
/* partOne: Calculates the Fibonacci Number recursively according to Part 1
 * INPUT: integer
 * OUTPUT: returns the Fibonacci Number
 */
unsigned long int partOne(int fibN)
{
    int FibonacciNumber;

    if (fibN == 0)
    {
        return 0;
    }
    else if (fibN == 1)
    {
        return 1;
    }
    else
    {
        return partOne(fibN - 1) + partOne(fibN - 2);
    }
}

/* partOne: Calculates the Fibonacci Number iteratively according to Part 2
 * INPUT: integer
 * OUTPUT: returns the Fibonacci Number
 */
unsigned long int partTwo(int fibN)
{
    int fibN2 = 0;
    int fibN1 = 1;
    int FibonacciNumber;

    for (int i = 0 ; i < fibN - 1 ; ++i)
    {
        FibonacciNumber = fibN1 + fibN2;
        fibN2 = fibN1;
        fibN1 = FibonacciNumber;
    }

    return FibonacciNumber;
}
/* partOne: Calculates the Fibonacci Number according to Part 3
 * INPUT: integer
 * OUTPUT: returns the Fibonacci Number
 */
unsigned long int partThree(int n)
{
    if (knownF[n] != 0)
    {
        return knownF[n];
    }
    int temp = n;
    if (n < 0) return 0;
    if (n > 1)
    {
        temp = partThree(n-1) + partThree(n-2);
    }
    knownF[n] = temp;

    return knownF[n];
}
]0;david11n@ltsp-amd64-bravo: ~/github/Scratch_Files/cs254/lab4[01;32mdavid11n@ltsp-amd64-bravo[00m:[01;34m~/github/Scratch_Files/cs254/lab4[00m$ cc lab4.c
]0;david11n@ltsp-amd64-bravo: ~/github/Scratch_Files/cs254/lab4[01;32mdavid11n@ltsp-amd64-bravo[00m:[01;34m~/github/Scratch_Files/cs254/lab4[00m$ ./a.out 20
[3J[H[2J
Lab 4: 60-254: Data Structures and Algorithms
Ben Davidson #104924033
0605-2018 1:35

INPUT: 20
Part 1: 6765 in 0 seconds
Part 2: 6765 in 0 seconds
Part 3: 6765 in 0 seconds

]0;david11n@ltsp-amd64-bravo: ~/github/Scratch_Files/cs254/lab4[01;32mdavid11n@ltsp-amd64-bravo[00m:[01;34m~/github/Scratch_Files/cs254/lab4[00m$ ./a.out 30
[3J[H[2J
Lab 4: 60-254: Data Structures and Algorithms
Ben Davidson #104924033
0605-2018 1:35

INPUT: 30
Part 1: 832040 in 0 seconds
Part 2: 832040 in 0 seconds
Part 3: 832040 in 0 seconds

]0;david11n@ltsp-amd64-bravo: ~/github/Scratch_Files/cs254/lab4[01;32mdavid11n@ltsp-amd64-bravo[00m:[01;34m~/github/Scratch_Files/cs254/lab4[00m$ ./a.out 4
[3J[H[2J
Lab 4: 60-254: Data Structures and Algorithms
Ben Davidson #104924033
0605-2018 1:35

INPUT: 4
Part 1: 3 in 0 seconds
Part 2: 3 in 0 seconds
Part 3: 3 in 0 seconds

]0;david11n@ltsp-amd64-bravo: ~/github/Scratch_Files/cs254/lab4[01;32mdavid11n@ltsp-amd64-bravo[00m:[01;34m~/github/Scratch_Files/cs254/lab4[00m$ ls -l
total 28
-rwxr-xr-x 1 david11n temp 13104 Jun  5 14:14 [0m[01;32ma.out[0m
-rwxr-xr-x 1 david11n temp  8760 Jun  5 14:13 [01;32mlab4[0m
-rw-r--r-- 1 david11n temp  3351 Jun  5 14:13 lab4.c
-rw-r--r-- 1 david11n temp     0 Jun  5 14:14 lab4.txt
]0;david11n@ltsp-amd64-bravo: ~/github/Scratch_Files/cs254/lab4[01;32mdavid11n@ltsp-amd64-bravo[00m:[01;34m~/github/Scratch_Files/cs254/lab4[00m$ exit
exit

Script done on Tue 05 Jun 2018 02:14:56 PM EDT
